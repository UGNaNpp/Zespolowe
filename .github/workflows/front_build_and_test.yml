name: Front-end CICD

on:
  push:
  pull_request:

jobs:
  build:
    name: Build App
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    container:
      image: node:23-alpine3.20

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Run Linter
        working-directory: ./web_app
        run: |
          npm ci
          npm run lint

      - name: Build without Tests
        working-directory: ./web_app
        run: |
          npm install
          npm run build

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.4.0

      - name: Build custom test image
        uses: docker/build-push-action@v6.15.0
        with:
          context: ./web_app
          file: ./web_app/Dockerfile.test
          load: true
          tags: front-test-image:latest
          build-args: |
            AGENT_UID=${{ github.run_id }}
            AGENT_GID=1000

      - name: Run Tests in Container
        run: docker run --rm front-test-image:latest

  docker-build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev-main'

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Log in to DockerHub
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Get Version and Commit Hash
        id: vars
        run: |
          VERSION=$(node -p "require('./package.json').version")
          COMMIT=$(git rev-parse --short HEAD)
          IMAGE_TAG="${VERSION}.${COMMIT}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "COMMIT=$COMMIT" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6.15.0
        with:
          context: ./web_app
          file: ./web_app/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKERHUB_USERNAME }}/s_cameras_front:${{ env.IMAGE_TAG }}
            ${{ env.DOCKERHUB_USERNAME }}/s_cameras_front:latest
